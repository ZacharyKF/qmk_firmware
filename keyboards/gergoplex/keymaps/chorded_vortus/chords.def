// Character codes to round out keyboard
CHORD(KC_QUOT, KR9C1, KR9C2),
CHORD(KC_GRV, KR4C1, KR4C2),
CHORD(KC_BSLS, KR8C2, KR9C2),

// Esc, caps, plus, minus, insert
CHORD(KC_ESC,   KR3C3, KR8C3),
CHORD(KC_CAPS,  KR2C3, KR7C3),
CHORD(KC_EQUAL,  KR3C1, KR3C2),
CHORD(KC_MINUS, KR8C1, KR8C2),
CHORD(KC_INS, KR8C3, KR9C1),

// Numbers
CHORD(KC_1, KR4C0, KR4C1),
CHORD(KC_2, KR3C0, KR3C1),
CHORD(KC_3, KR2C0, KR2C1),
CHORD(KC_4, KR1C0, KR1C1),
CHORD(KC_5, KR0C0, KR0C1),
CHORD(KC_6, KR5C0, KR5C1),
CHORD(KC_7, KR6C0, KR6C1),
CHORD(KC_8, KR7C0, KR7C1),
CHORD(KC_9, KR8C0, KR8C1),
CHORD(KC_0, KR9C0, KR9C1),

// Modifiers
//   left
CHORD(KC_LCTL, KR0C1, KR0C2),
CHORD(KC_LALT, KR1C1, KR1C2),
CHORD(KC_LCMD, KR2C1, KR2C2),

//   right
CHORD(KC_RCTL, KR5C1, KR5C2),
CHORD(KC_RALT, KR6C1, KR6C2),
CHORD(KC_RCMD, KR7C1, KR7C2),

// Brackets
//   Using left thumb
CHORD(KC_LBRC,          KR1C3, KR4C0),
CHORD(LSFT(KC_LBRC),    KR1C3, KR4C1),
CHORD(LSFT(KC_9),       KR1C3, KR4C2),
CHORD(KC_RBRC,          KR1C3, KR9C0),
CHORD(LSFT(KC_RBRC),    KR1C3, KR9C1),
CHORD(LSFT(KC_0),       KR1C3, KR9C2),

//   Using right thumb
CHORD(KC_LBRC,          KR6C3, KR4C0),
CHORD(LSFT(KC_LBRC),    KR6C3, KR4C1),
CHORD(LSFT(KC_9),       KR6C3, KR4C2),
CHORD(KC_RBRC,          KR6C3, KR9C0),
CHORD(LSFT(KC_RBRC),    KR6C3, KR9C1),
CHORD(LSFT(KC_0),       KR6C3, KR9C2),

// Navigation
//   left
//     arrows
CHORD(KC_RIGHT, KR1C3, KR0C1),
CHORD(KC_UP,    KR1C3, KR1C1),
CHORD(KC_LEFT,  KR1C3, KR2C1),
CHORD(KC_DOWN,  KR1C3, KR3C1),

//     page
CHORD(KC_PGDOWN,    KR1C3, KR0C0),
CHORD(KC_HOME,      KR1C3, KR1C0),
CHORD(KC_PGUP,      KR1C3, KR2C0),
CHORD(KC_END,       KR1C3, KR3C0),

//   right
//     arrows
CHORD(KC_LEFT,  KR6C3, KR5C1),
CHORD(KC_UP,    KR6C3, KR6C1),
CHORD(KC_RIGHT, KR6C3, KR7C1),
CHORD(KC_DOWN,  KR6C3, KR8C1),

//     page
CHORD(KC_PGUP,      KR6C3, KR5C0),
CHORD(KC_HOME,      KR6C3, KR6C0),
CHORD(KC_PGDOWN,    KR6C3, KR7C0),
CHORD(KC_END,       KR6C3, KR8C0),

// F keys
//   left
CHORD(KC_F1,    KR3C3, KR4C1),
CHORD(KC_F2,    KR3C3, KR4C0),
CHORD(KC_F3,    KR3C3, KR3C0),
CHORD(KC_F4,    KR3C3, KR2C0),
CHORD(KC_F5,    KR3C3, KR1C0),
CHORD(KC_F6,    KR3C3, KR0C0),
CHORD(KC_F7,    KR3C3, KR5C0),
CHORD(KC_F8,    KR3C3, KR6C0),
CHORD(KC_F9,    KR3C3, KR7C0),
CHORD(KC_F10,   KR3C3, KR8C0),
CHORD(KC_F11,   KR3C3, KR9C0),
CHORD(KC_F12,   KR3C3, KR9C1),

//   right
CHORD(KC_F1,    KR8C3, KR4C1),
CHORD(KC_F2,    KR8C3, KR4C0),
CHORD(KC_F3,    KR8C3, KR3C0),
CHORD(KC_F4,    KR8C3, KR2C0),
CHORD(KC_F5,    KR8C3, KR1C0),
CHORD(KC_F6,    KR8C3, KR0C0),
CHORD(KC_F7,    KR8C3, KR5C0),
CHORD(KC_F8,    KR8C3, KR6C0),
CHORD(KC_F9,    KR8C3, KR7C0),
CHORD(KC_F10,   KR8C3, KR8C0),
CHORD(KC_F11,   KR8C3, KR9C0),
CHORD(KC_F12,   KR8C3, KR9C1)
